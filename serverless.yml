org: storyteller
app: serverless
service: serverless-sls

plugins:
  - serverless-python-requirements
  - serverless-wsgi

custom:
  tableName: 'blobs-table-${self:provider.stage}'
  bucketName: 'images-bucket-sls-perf${self:provider.stage}'
  wsgi:
    app: app.app
    packRequirements: false
  pythonRequirements:
    dockerizePip: non-linux

provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: '20201221'
  stage: dev
  region: us-east-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource: "arn:aws:s3:::${self:provider.environment.BUCKET}/*"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": [ "BlobsDynamoDBTable", "Arn" ] }
    - Effect: Allow
      Action:
          - rekognition:*
      Resource: "*"
  s3:
    bucketOne:
      name: ${self:custom.bucketName}
  environment:
    BLOBS_TABLE: ${self:custom.tableName}
    BUCKET: ${self:custom.bucketName}


functions:
  app:
    handler: app.hello
    events:
      - http:
          method: GET
          path: /

  getBlob:
    handler: wsgi_handler.handler
    events:
      - http:
          method: GET
          path: /blobs/{proxy+}

  createBlob:
    handler: wsgi_handler.handler
    events:
      - http:
          method: POST
          path: /blobs
          request:
            passThrough: NEVER
            template:
              application/json: '{ "callback_url" : "$input.params("callback_url")" }'

  rekognition_and_callback:
    handler: app.rekognition_and_callback
    events:
      - s3:
          bucket: ${self:custom.bucketName}
          event: s3:ObjectCreated:Put

resources:
  Resources:
    BlobsDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: blob_id
            AttributeType: S
        KeySchema:
          - AttributeName: blob_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}
